{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","togglemode","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","placeholder","newText","toUpperCase","showAlert","toLowerCase","element","document","file","Blob","URL","createObjectURL","download","body","appendChild","click","split","length","Math","trunc","defaultProps","aboutText","Alert","word","alert","charAt","slice","msg","App","setmode","_useState3","_useState4","setAlert","message","setTimeout","style","backgroundColor","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.38d6b256.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"/about\">{props.aboutText}</a>\r\n                        </li> */}\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                </div>\r\n                <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n    title: \"Set title here\",\r\n    aboutText: \"About\"\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\",\"success\")\r\n    }\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase\",\"success\")\r\n    }\r\n    const handelDownload = () => {\r\n        const element = document.createElement(\"a\");\r\n        const file = new Blob([text], {\r\n            type: \"text/plain\"\r\n        });\r\n        element.href = URL.createObjectURL(file);\r\n        element.download = \"myFile.txt\";\r\n        document.body.appendChild(element);\r\n        element.click();\r\n        props.showAlert(\"File Downloaded\",\"success\")\r\n    };\r\n    const onChange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"myBox\" className=\"form-label\">Example textarea</label>\r\n                    <textarea className=\"form-control\" value={text} onChange={onChange} id=\"myBox\" rows=\"8\" placeholder='Enter Text here'></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n                <button className=\"btn btn-primary\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n                <button className=\"btn btn-primary\" onClick={handelDownload}>Download</button>\r\n            </div>\r\n            <div className=\"container my-3\">\r\n                <h1>Your text summary</h1>\r\n                <p><b>{text.split(\" \").length}</b> Words and  <b>{text.length}</b> Characters</p>\r\n                <p>Readable in <b>{Math.trunc(0.008 * (text.split(\" \").length - 1))}</b> Minutes <b>{(0.008 * (text.split(\" \").length - 1)) * 60}</b> seconds</p>\r\n                <h2>Preview</h2>\r\n                <p>{text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capatilize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + word.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capatilize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n\r\n\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About'\nimport React, { useState } from 'react'\nimport Alert from './components/Alert'\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState('');\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 3000);\n  }\n\n  const togglemode = () => {\n    if (mode === \"light\") {\n      setmode('dark');\n      document.body.style.backgroundColor = \"yellow\"\n      showAlert(\"Dark mode has been enabled\", \"success\")\n    }\n    else {\n      setmode('light');\n      document.body.style.backgroundColor = \"green\"\n      showAlert(\"Light mode has been enabled\", \"success\")\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode={mode} togglemode={togglemode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch> */}\n            {/* <Route exact path=\"/about\"> */}\n              {/* <About /> */}\n            {/* </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForm showAlert={showAlert} heading=\"Enter the Text to analyze\" />\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}