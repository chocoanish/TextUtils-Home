{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/About.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","react_router_dom","to","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","aboutText","onClick","togglemode","role","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","value","onChange","event","target","rows","placeholder","newText","toUpperCase","showAlert","toLowerCase","element","document","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","split","filter","elem","length","Math","trunc","About","myStyle","color","backgroundColor","style","defaultProps","Alert","word","alert","charAt","slice","msg","App","setmode","_useState3","_useState4","setAlert","message","setTimeout","components_Alert","react_router","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"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","file":"static/js/main.9e6884bf.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n                        </li>\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form> */}\r\n                </div>\r\n                <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" aria-checked id=\"flexSwitchCheckDefault\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    aboutText: PropTypes.string.isRequired\r\n}\r\nNavbar.defaultProps = {\r\n    title: \"Set title here\",\r\n    aboutText: \"About\"\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () => {\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase\",\"success\")\r\n    }\r\n    const handleLoClick = () => {\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase\",\"success\")\r\n    }\r\n    const handelDownload = () => {\r\n        const element = document.createElement(\"a\");\r\n        const file = new Blob([text], {\r\n            type: \"text/plain\"\r\n        });\r\n        element.href = URL.createObjectURL(file);\r\n        element.download = \"myFile.txt\";\r\n        document.body.appendChild(element);\r\n        element.click();\r\n        props.showAlert(\"File Downloaded\",\"success\")\r\n    };\r\n    const onChange = (event) => {\r\n        setText(event.target.value)\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1>{props.heading}</h1>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"myBox\" className=\"form-label\">Example textarea</label>\r\n                    <textarea className=\"form-control\" value={text} onChange={onChange} id=\"myBox\" rows=\"8\" placeholder='Enter Text here'></textarea>\r\n                </div>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n                <button className=\"btn btn-primary mx-1 my-1\" onClick={handelDownload}>Download</button>\r\n            </div>\r\n            <div className=\"container my-3\">\r\n                <h1>Your text summary</h1>\r\n                <p><b>{text.split(/\\s+/).filter((elem)=>{return elem.length!==0}).length}</b> Words and  <b>{text.length}</b> Characters</p>\r\n                <p>Readable in <b>{Math.trunc(0.008 * (text.split(\" \").length - 1))}</b> Minutes <b>{(0.008 * (text.split(\" \").length - 1)) * 60}</b> seconds</p>\r\n                <h2>Preview</h2>\r\n                <p>{text}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n    let myStyle = {\r\n        color: props.mode === 'dark'?'white':'#042743',\r\n        backgroundColor: props.mode ==='dark'?'rgb(36 74 104)':'white'\r\n    }\r\n\r\n    return (\r\n        <div style={myStyle}>\r\n            <h1 className=\"text-center\" style={myStyle}>About Us</h1>\r\n            {/* <img src=\"%PUBLIC_URL%/Profile.jpg\" alt='' className='img-thumbnail'/> */}\r\n            <p className=\"text-right\" style={myStyle}>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ea incidunt quod delectus culpa deleniti minima vel mollitia. Itaque, aliquam fugit. Quis maiores officia quaerat iste sint enim reiciendis porro hic tempora, odio inventore. Nulla facilis, debitis alias laborum beatae voluptatum recusandae, maiores, consequuntur voluptatibus quisquam eos rerum voluptatem vitae tempore.</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capatilize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + word.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capatilize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n\r\n\r\n","\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport About from './components/About'\nimport React, { useState } from 'react'\nimport Alert from './components/Alert'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState('light');\n  const [alert, setAlert] = useState('');\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 3000);\n  }\n\n  const togglemode = () => {\n    if (mode === \"light\") {\n      setmode('dark');\n      document.body.style.backgroundColor = \"yellow\"\n      showAlert(\"Dark mode has been enabled\", \"success\")\n    }\n    else {\n      setmode('light');\n      document.body.style.backgroundColor = \"green\"\n      showAlert(\"Light mode has been enabled\", \"success\")\n    }\n  }\n\n  return (\n    <>\n      <Router>\n        <Navbar title=\"TextUtils\" mode={mode} togglemode={togglemode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route exact path=\"/about\">\n              <About mode={mode} />\n            </Route>\n            <Route exact path=\"/\">\n              <TextForm showAlert={showAlert} heading=\"Enter the Text to analyze\" />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}